"""Updated Info Tables

Revision ID: 906d20c6dd5d
Revises: ffdc0a98111c
Create Date: 2024-07-15 18:15:02.252509

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")




# revision identifiers, used by Alembic.
revision = '906d20c6dd5d'
down_revision = 'ffdc0a98111c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('body', sa.String(length=5000), nullable=False),
    sa.Column('ownerId', sa.Integer(), nullable=False),
    sa.Column('articleImage', sa.String(), nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['ownerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE articles SET SCHEMA {SCHEMA};")
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=2000), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('isTraditional', sa.Boolean(), nullable=False),
    sa.Column('ownerId', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['ownerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE products SET SCHEMA {SCHEMA};")
    op.create_table('article_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.Enum('nintendo', 'nsixfour', 'switch', 'game_boy', 'game_boy_color', 'game_boy_advanced', 'pokemon', 'nintendo_ds', 'gamecube', 'xbox', 'xbox_360', 'xbox_one', 'xbox_series_x', 'playstation', 'playstation_2', 'playstation_3', 'playstation_4', 'playstation_5', 'retro', 'coop', 'multiplayer', 'pvp', 'pve', 'singleplayer', 'hasbro', 'fantasy', 'medieval', 'ww1', 'video_game_theme', 'tcg', 'modern_warfare', 'classic', 'civilization', 'acw', 'bluffing', 'medical', 'rage', 'economy', 'party', 'noire', 'mafia', 'rp', 'racing', 'travel', 'pirates', 'military', 'book', 'farming', name='tags'), nullable=False),
    sa.Column('articleId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['articleId'], ['articles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE article_tags SET SCHEMA {SCHEMA};")
    op.create_table('product_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('productId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['productId'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE product_images SET SCHEMA {SCHEMA};")
    op.create_table('product_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.Enum('nintendo', 'nsixfour', 'switch', 'game_boy', 'game_boy_color', 'game_boy_advanced', 'pokemon', 'nintendo_ds', 'gamecube', 'xbox', 'xbox_360', 'xbox_one', 'xbox_series_x', 'playstation', 'playstation_2', 'playstation_3', 'playstation_4', 'playstation_5', 'retro', 'coop', 'multiplayer', 'pvp', 'pve', 'singleplayer', 'hasbro', 'fantasy', 'medieval', 'ww1', 'video_game_theme', 'tcg', 'modern_warfare', 'classic', 'civilization', 'acw', 'bluffing', 'medical', 'rage', 'economy', 'party', 'noire', 'mafia', 'rp', 'racing', 'travel', 'pirates', 'military', 'book', 'farming', name='tags'), nullable=False),
    sa.Column('productId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['productId'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE product_tags SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_tags')
    op.drop_table('product_images')
    op.drop_table('article_tags')
    op.drop_table('products')
    op.drop_table('articles')
    # ### end Alembic commands ###
